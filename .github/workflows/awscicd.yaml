name: Java and AWS ECS CICD
on:
  push:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

env:
  #리전
  AWS_REGION: ap-southeast-2
  #저장소 이름
  ECR_REPOSITORY: awscicd
  #ECS 서비스
  ECS_SERVICE: awscicd
  #ECS 클러스터
  ECS_CLUSTER: awscicd
  #TASK정의 위치
  ECS_TASK_DEFINITION: ./awscicd-revision2.json
  #CONTAINER 이름
  CONTAINER_NAME: awscicd

jobs:
  build-docker-image:
    #ubuntu 환경에서 수행
    runs-on: ubuntu-latest
    steps:
      #소스 코드 가져오기
      - uses: actions/checkout@v3
      #JDK 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      #권한 추가
      - name: Add permissions to Gradle Wrapper
        run: chmod +x ./gradlew
      #build
      - name: Build with Grandle
        uses: gradle/gradle-build-action@v2.6.0
        with:
          arguments: clean build

      #AWS 로그인
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::730335547094:role/AWScicd
          role-session-name: sampleSessionName
          aws-region: ap-southeast-2

      #AWS - ECR 로그인
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      #이미지를 빌드해서 ECR로 push
      - name: Build and push image to Amazon ECR
        id: build-image
        env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            IMAGE_TAG: ${{ github.sha }}
        run: |
            # Build a docker container and
            # push it to ECR so that it can
            # be deployed to ECS.
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
      #task를 수정하는 작업
      - name: Fill in the new image ID and in the AWS_ECS TASK Definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-taskdefinition@c804dfbdd57f713b6c079302a4c01db7017a36fc
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      #배포
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-taskdefinition@df9643053eda01f169e64a0e60233aacca83799a
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true